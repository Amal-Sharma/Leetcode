/*
Given an integer array nums, return the number of subarrays of length 3 such that the sum of the first and third numbers equals exactly half of the second number.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,2,1,4,1]

Output: 1

Explanation:

Only the subarray [1,4,1] contains exactly 3 elements where the sum of the first and third numbers equals half the middle number.
*/

class Solution {
public:
    int countSubarrays(vector<int>& nums) {
        int ans =0;
        int i =0;
        if(nums.size() < 3){
            return 0;
        }
        while(i < nums.size()-2){
            if(nums[i] + nums[i+2] == nums[i+1]/2 && nums[i+1]%2==0){
                ans++;
            }
            i++;
        }
        return ans;
    }
};
